import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

# Definir el sistema de ecuaciones diferenciales
def depredador_presa(poblaciones, t, alpha, beta, delta, gamma):
    x, y = poblaciones
    dxdt = alpha * x - beta * x * y
    dydt = delta * x * y - gamma * y
    return [dxdt, dydt]

# Parámetros del modelo
alpha = 0.1   # Tasa de crecimiento de presas
beta = 0.02   # Tasa de depredación
delta = 0.01  # Tasa de reproducción de depredadores
gamma = 0.1   # Tasa de mortalidad de depredadores

# Condiciones iniciales
x0 = 40  # Población inicial de presas
y0 = 9   # Población inicial de depredadores

# Tiempo para simular
t = np.linspace(0, 200, 1000)

# Resolver las ecuaciones diferenciales
soluciones = odeint(depredador_presa, [x0, y0], t, args=(alpha, beta, delta, gamma))

# Extraer las soluciones para presas y depredadores
presas = soluciones[:, 0]
depredadores = soluciones[:, 1]

# Graficar los resultados
plt.figure(figsize=(10, 6))
plt.plot(t, presas, label='Presas (x)', color='b')
plt.plot(t, depredadores, label='Depredadores (y)', color='r')
plt.title('Modelo Depredador-Presa (Lotka-Volterra)')
plt.xlabel('Tiempo')
plt.ylabel('Poblaciones')
plt.legend()
plt.grid(True)
plt.show()
