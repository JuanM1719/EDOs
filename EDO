{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Modelado del Crecimiento Poblacional\n",
    "\n",
    "En este notebook, resolveremos la ecuación diferencial ordinaria que describe el crecimiento poblacional utilizando Python."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.integrate import odeint\n",
    "\n",
    "# Definimos la función que representa la EDO\n",
    "def model(P, t, r, K):\n",
    "    dPdt = r * P * (1 - P / K)\n",
    "    return dPdt\n",
    "\n",
    "# Parámetros\n",
    "r = 0.1  # Tasa de crecimiento\n",
    "K = 1000  # Capacidad de carga\n",
    "P0 = 10   # Población inicial\n",
    "\n",
    "# Tiempo de simulación\n",
    "t = np.linspace(0, 100, 1000)  # Desde 0 hasta 100 con 1000 puntos\n",
    "\n",
    "# Resolución de la EDO\n",
    "P = odeint(model, P0, t, args=(r, K))\n",
    "\n",
    "# Graficar los resultados\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.plot(t, P, label='Población')\n",
    "plt.title('Crecimiento Poblacional')\n",
    "plt.xlabel('Tiempo')\n",
    "plt.ylabel('Población')\n",
    "plt.legend()\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Interpretación de los Resultados\n",
    "La gráfica muestra cómo la población crece con el tiempo, aproximándose a la capacidad de carga \( K \)."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}

